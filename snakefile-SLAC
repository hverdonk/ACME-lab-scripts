###################
### Configuration ##
####################
#source /etc/profile.d/modules.sh
#module load aocc/4.0.0;

with open('cluster.json', 'r') as f:
    data = json.loads(f.read())
    NODES = data['__default__']['nodes']
    PPN = data['__default__']['ppn']

##########
## DATA ##
##########
resultDirectory = "/data/shares/veg/hverdonk/enterobacteria_15species_alignments-MSS"
dissenter_set = "" # leave empty quotes if running on full dataset

#if analyzing particular files from a text list (e.g., when analyzing a subset of the data), uncomment the lines below
#targetFILES = get_list("")
#FILES = [dataDirectory + i for i in targetFILES] 

FILES = glob_wildcards(resultDirectory + "/raxml" + dissenter_set + "/{file}.msa.raxml.bestTree").file
MSAs = glob_wildcards(resultDirectory + "/post_msa" + dissenter_set + "/{file}.msa").file

################
## HYPHY vars ##
################
hyphy = "/usr/local/bin/hyphy"
HYPHYMP = "/home/hverdonk/hyphy-develop/HYPHYMP"
HYPHYMPI = "/home/hverdonk/hyphy-develop/HYPHYMPI"
LIBPATH = "/home/hverdonk/hyphy-develop/res"

###############
## Models ##
###############
FIT_MODEL = "/home/hverdonk/hyphy-analyses/FitModel/FitModel.bf"

###########################
# Result processing tools #
###########################
# RESULT_PROCESSOR = "/data/shares/veg/hverdonk/python/combine_results_4.py"

####################
# Helper Functions #
####################
# handle the case where some alignments have different file names, because they've been filtered
def format_input(wildcards):
    curr_file = [f for f in MSAs if wildcards.file in f]
    if 'FILTER' in curr_file[0]:
        return resultDirectory + "/post_msa" + dissenter_set + "/" + curr_file[0] + ".msa"
    else:
        return resultDirectory + "/post_msa" + dissenter_set + "/" + wildcards.file + ".msa"

print("Files are: " + str(FILES))

rule all:
    input:
        expand(resultDirectory + "/SLAC/{file}.SLAC.json", file=FILES)


rule SLAC:
    input:
        tree = resultDirectory + "/raxml" + dissenter_set + "/{file}.msa.raxml.bestTree",
        alignment = format_input,
    output: 
        resultDirectory + "/SLAC/{file}.SLAC.json"
    threads:
        PPN
    shell: 
        '''
        mkdir -p {resultDirectory}/SLAC
        {hyphy} slac --tree {input.tree} --alignment {input.alignment} --output {output}
        '''

